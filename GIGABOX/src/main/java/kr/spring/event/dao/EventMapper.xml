<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.spring.event.dao.EventMapper">
	<insert id="insertEvent" parameterType="eventVO">
		INSERT INTO event(
					event_num, 
					mem_num,
					category_num,
					category_detail_num,
					event_form_type,
					thumb1,
					thumb1_name,
					thumb2,
					thumb2_name,
					title,
					content,
					event_start,
					event_end,
					reg_date,
					state,
					count
					)VALUES(
					event_seq.nextval, 
					#{mem_num},
					#{category_num},
					#{category_detail_num},
					#{event_form_type},
					#{thumb1},
					#{thumb1_name},
					#{thumb2},
					#{thumb2_name},
					#{title},
					#{content},
					TO_DATE(#{event_start},'YYYY-MM-DD'),
					TO_DATE(#{event_end},'YYYY-MM-DD'),
					SYSDATE,
					0,
					0
					)
	</insert>
	<sql id="eventSearch">
		<where>
			<if test="keyword != null and keyword != ''">
				<if test="keyfield == 1">
					title LIKE '%' || #{keyword} || '%'
				</if>
				<if test="keyfield == 2">
					content LIKE '%' || #{keyword} || '%'
				</if>
				<if test="keyfield == 3">
					title LIKE '%' || #{keyword} || '%' or
					content LIKE '%' || #{keyword} || '%'
				</if>
			</if>
			<if test="keyword != null and keyword != '' and category_num != null">
				AND
			</if>
			<if test="category_num != null">
				c.category_num = #{category_num}
			</if>
			<if test="category_num == 3">
				AND event_form_type IN(2,3)
			</if>
			<if test="((keyword != null and keyword != '' )or category_num != null )and category_detail_num != null">
				AND
			</if>
			<if test="category_detail_num != null">
				category_detail_num = #{category_detail_num}
			</if>
		</where>
	</sql>
	<sql id="eventOrder">
		<if test="order == 1">
			ORDER BY event_end DESC, reg_date DESC
		</if>
		<if test="order == 2">
			ORDER BY event_start DESC, reg_date DESC
		</if>
	</sql>
	<select id="selectEventList" parameterType="map" resultType="eventVO">
	<!-- 전체/검색 목록 -->
	SELECT * FROM (SELECT a.*, rownum rnum FROM
    			(SELECT  event_num, c.category_name, d.category_name category_detail_name, event_form_type, title, event_start, event_end, state, count, reg_date, modify_date FROM event e join event_category c ON e.category_num = c.category_num
                                join event_category_detail d on category_detail_num = d.category_num 
				<include refid="eventSearch"></include>)a) 
		<![CDATA[WHERE rnum >= #{start} AND rnum <= #{end}]]><include refid="eventOrder"></include>	       
	</select>
	
	<select id="selectRowCount" parameterType="map"  resultType="integer">
		SELECT COUNT(*) FROM event c <include refid="eventSearch"></include> 
	</select>
	<select id="selectEventMainList" resultType="eventVO">
		 SELECT * FROM(SELECT event_num,category_detail_num,category_name, title, event_start, event_end, row_number() over(partition by e.category_detail_num order by reg_date DESC) as rnum 
                    FROM event e JOIN event_category_detail d ON e.category_detail_num = d.category_num)WHERE <![CDATA[rnum <= 4]]>
	</select>
	<select id="selectEventTop10List" resultType="eventVO">
		SELECT a.*,rownum FROM(SELECT event_num,category_detail_num,category_name, title, event_start, event_end,reg_date
                    FROM event e JOIN event_category_detail d ON e.category_detail_num = d.category_num ORDER BY reg_date DESC)a
                    WHERE <![CDATA[rownum <= 10]]>
	</select>
	<select id="selectDetailCategoryList" resultType="categoryVO">
		SELECT * FROM event_category_detail
	</select>
	<!-- 에러 지점 -->
	<select id="selectListReply"  parameterType="map" resultType="eventReplyVO">
		SELECT
		  *
		FROM (SELECT
		        a.*,
		        rownum rnum
		      FROM (SELECT
		              reply_num,
		              mem_num,
		              th_num,
		              th_name,
		              event_num,
		              <![CDATA[
		              REPLACE(REPLACE(content,'<','&lt;'),'>','&gt;') content,
		              ]]>
		              reg_date,
		              modify_date,
		              ip,
		              id
		            FROM event_reply 
		            JOIN member USING(mem_num)
		            JOIN theater USING(th_num)
		            WHERE event_num=#{event_num}
		            ORDER BY reply_num DESC)a)
		<![CDATA[
		WHERE rnum >= #{start} AND rnum <= #{end}
		]]>   
	</select>
	
	<select id="selectRowCountReply" parameterType="map" resultType="integer">
		SELECT COUNT(*) FROM event_reply WHERE event_num=#{event_num}
	</select>
	
	<select id="selectReply" parameterType="integer" resultType="eventReplyVO">
		SELECT * FROM event_reply WHERE reply_num=#{reply_num}
	</select>
	<select id="checkReply" parameterType="eventReplyVO"  resultType="boolean">
		SELECT COUNT(*) FROM DUAL WHERE EXISTS (SELECT * FROM event_reply WHERE mem_num = #{mem_num} AND event_num = #{event_num})
	</select>
	<insert id="insertReply" parameterType="eventReplyVO">
		INSERT INTO event_reply(
			  reply_num,
			  mem_num,
			  th_num,
			  event_num,
			  content,
			  ip,
			  reg_date
			  )
			VALUES (
			  event_reply_seq.nextval,
			  #{mem_num},
			  #{th_num},
			  #{event_num},
			  #{content},
			  #{ip},
			  SYSDATE
			  )  
	</insert>
	<update id="updateReply" parameterType="eventReplyVO">
		UPDATE event_reply SET th_num=#{th_num},content=#{content},ip=#{ip},modify_date = SYSDATE WHERE reply_num=#{reply_num}
	</update>
	<delete id="deleteReply" parameterType="integer">
		DELETE FROM event_reply WHERE reply_num = ${reply_num}
	</delete>
	<delete id="deleteReplyByEventNum" parameterType="integer">
		DELETE FROM event_reply WHERE event_num=#{event_num}
	</delete>
	<select id="selectReplyList" parameterType="integer" resultType="eventReplyVO">
	
SELECT event_num, name, phone, email, th_name,content,
		CASE WHEN TO_CHAR(r.reg_date,'YY/MM/DD') > TO_CHAR(r.modify_date,'YY/MM/DD') THEN r.reg_date
		    WHEN TO_CHAR(r.reg_date,'YY/MM/DD')  <![CDATA[ < ]]> TO_CHAR(r.modify_date,'YY/MM/DD') THEN r.modify_date
		    ELSE r.reg_date
		                      END reg_date
		                      FROM event_reply r JOIN member_detail d USING(mem_num)
		                                        JOIN theater USING(th_num) WHERE event_num = #{event_num} ORDER BY reg_date ASC
	</select>
</mapper>