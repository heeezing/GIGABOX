<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.spring.movie.dao.MovieMapper">
	<!-- 영화 등록 -->
	<insert id="registerMovie" parameterType="MovieVO">
		INSERT INTO movie(
			movie_num,
			m_title,
			m_titleEng,
			m_director,
			m_actor,
			m_nation,
			m_company,
			m_plot,
			m_runtime,
			m_rating,
			m_genre,
			m_opendate,
			m_poster,
			poster_name,
			m_stllimg,
			stllimg_name,
			m_vod,
			m_status
			)
		VALUES
			(
			movie_seq.nextval,
			#{m_title},
			#{m_titleEng},
			#{m_director},
			#{m_actor},
			#{m_nation},
			#{m_company},
			#{m_plot},
			#{m_runtime},
			#{m_rating},
			#{m_genre},
			#{m_opendate},
			#{m_poster},
			#{poster_name},
			#{m_stllimg},
			#{stllimg_name},
			#{m_vod},
			#{m_status}
			)
	</insert>
	<!-- api로 영화등록 -->
	<insert id="insertMovie" parameterType="MovieVO">
		INSERT INTO movie(
			movie_num,
			m_title,
			m_titleEng,
			m_director,
			m_actor,
			m_nation,
			m_company,
			m_plot,
			m_runtime,
			m_rating,
			m_genre,
			m_opendate2,
			m_poster2,
			m_stllimg2,
			m_vod,
			movieSeq
			)
		VALUES
			(
			movie_seq.nextval,
			#{m_title},
			#{m_titleEng},
			#{m_director},
			#{m_actor},
			#{m_nation},
			#{m_company},
			#{m_plot},
			#{m_runtime},
			#{m_rating},
			#{m_genre},
			#{m_opendate2},
			#{m_poster2},
			#{m_stllimg2},
			#{m_vod},
			#{movieSeq}
			)
	</insert>
	
	<!-- 영화 목록 -->
	<sql id="movieSearch">
		<where>
			<if test="keyword != null and keyword != ''">
				<if test="keyfield == 1"> <!-- 영화 제목 -->
					m_title LIKE '%' || #{keyword} || '%' or
					m_titleEng LIKE '%' || #{keyword} || '%'
				</if>
				<if test="keyfield == 2"> <!-- 영화 감독 -->
					m_director LIKE '%' || #{keyword} || '%'
				</if>
				<if test="keyfield == 3"> <!-- 영화 배우 -->
					m_actor LIKE '%' || #{keyword} || '%'
				</if>
			</if>
		</where>
	</sql>
	
	<sql id="movieOrder">
		<if test="order == 1">
			ORDER BY m_opendate DESC
		</if>
	</sql>
	
	<!-- 전체/검색 레코드 수  -->
	<select id="selectRowCount" parameterType="map" resultType="integer">
		SELECT 
			COUNT(*)
		FROM movie 
		<include refid="movieSearch"></include>
	</select>
	
	<!-- 전체/검색 목록 --> 
	<select id="selectList" parameterType="map" resultType="movieVO">
		SELECT
			*
		FROM (SELECT 
				a.*,
				rownum rnum
			  FROM(SELECT * FROM (SELECT
			  		movie_num,
			  		m_title,
			  		m_opendate,
			  		m_rating,
			  		m_poster2,
			  		m_director,
			  		m_actor,
			  		m_runtime,
			  		m_status
			  		FROM movie
			  		<include refid="movieSearch"></include>
			  		<include refid="movieOrder"></include>
			  		)WHERE m_status = 1)a)
		<![CDATA[
		WHERE rnum >= #{start} AND rnum <= #{end}
		]]>	  		
	</select> 
	<select id="selectPreList" parameterType="map" resultType="movieVO">
		SELECT
			*
		FROM (SELECT 
				a.*,
				rownum rnum
			  FROM(SELECT * FROM (SELECT
			  		movie_num,
			  		m_title,
			  		m_opendate,
			  		m_rating,
			  		m_poster2,
			  		m_director,
			  		m_actor,
			  		m_runtime,
			  		m_status
			  		FROM movie
			  		<include refid="movieSearch"></include>
			  		<include refid="movieOrder"></include>
			  		))a)
		<![CDATA[
		WHERE rnum >= #{start} AND rnum <= #{end} AND m_status = 2
		]]>	  		
	</select> 	
	
	
	<!-- (체크박스) 영화 삭제 -->	
	<delete id="deleteMovieCheck">
		DELETE FROM movie 
		WHERE movie_num IN 
		<foreach item="movie" collection="selectmovies" open="(" separator="," close=")">
			#{movie}
		</foreach>
	</delete>
	
	
	<!-- 관람평 시작 -->
	<!-- 관람평 쓰기 -->
	<insert id="insertReview" parameterType="reviewVO">
		INSERT INTO review(
			review_num,
			movie_num,
			mem_num,
			rating_score,
			review_content)
		VALUES(
			review_seq.nextval,
			#{movie_num},
			#{mem_num},
			#{rating_score},
			#{review_content})
	</insert>
	
	<!-- 관람평 목록 --> <!-- 임시로 다 작성할 수 있게 구현! 후에 예매 한 것만 작성할 수 있도록 구현하기 -->
	<select id="selectListReview" parameterType="map" resultType="reviewVO">
	SELECT * FROM
	(SELECT a.* , rownum rnum FROM
	(SELECT review_num,
	<![CDATA[
	REPLACE(REPLACE(review_content,'<','&lt;'),'>','&gt;') review_content,
	]]>
	rating_score,review_date,review_mdate,movie_num,mem_num,id,nick_name FROM review JOIN member USING(mem_num) WHERE movie_num= #{movie_num}
	ORDER BY review_num DESC)a)
	<![CDATA[ WHERE rnum >= #{start} AND rnum <=#{end} ]]>
	</select>
	
	<!-- 관람평 신고 목록 -->
	<sql id="repoSearch">
		<where>
			<if test="keyword != null and keyword != ''">
				<if test="keyfield == 1"> <!-- 관람평 내용 -->
					review_content LIKE '%' || #{keyword} || '%' 
				</if>
				<if test="keyfield == 2"> <!-- 신고자 ID -->
					id LIKE '%' || #{keyword} || '%'
				</if>
			</if>
		</where>
	</sql>
	
	<!-- 전체/검색 레코드 수  -->
	<select id="selectRowCountRepo" parameterType="map" resultType="integer">
		SELECT 
			COUNT(*)
		FROM(SELECT *
		FROM review_report p
		JOIN review r
		ON p.review_num = r.review_num
		JOIN member m
		ON p.mem_num = m.mem_num)
		<include refid="repoSearch"></include>
	</select>
	<!-- 신고내역 리스트 (관리자) -->		
	<select id="selectListRepo" parameterType="map" resultType="review_reportVO">
	SELECT
      	a.repo_num,a.review_num,a.repo_date,a.movie_num,a.review_content,id,
        rownum 
    FROM ( SELECT 
           		p.repo_num, 
                v.review_num, 
                p.repo_date,
                v.movie_num, 
                v.review_content  
            FROM review v 
            JOIN review_report p 
            ON v.review_num = p.review_num) a
      JOIN ( SELECT 
                id, 
                review_num,
                review_content
             FROM member m 
             JOIN review r 
             ON m.mem_num = r.mem_num
            <include refid="repoSearch"></include>) b
     ON a.review_num = b.review_num     
     <![CDATA[ 
    		WHERE rownum >= #{start} AND rownum <= #{end} 
    	]]> 
    ORDER BY repo_date DESC
	</select>
	
<!-- (체크박스) 관람평 신고 삭제 -->	
	<delete id="deleteRepoCheck">
		DELETE 
		FROM review_report 
		WHERE repo_num IN 
		<foreach item="item" collection="selectreports" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	
	
<!--  관람평 끝	 -->
</mapper>