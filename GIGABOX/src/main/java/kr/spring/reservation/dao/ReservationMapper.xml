<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.spring.reservation.dao.ReservationMapper">

	<!-- 상영시간표 등록 -->
	<insert id="insertSchedule" parameterType="scheduleVO">
		INSERT INTO schedule(
		  sch_num,
		  sch_date,
		  sch_start,
		  sch_end,
		  hall_num,
		  movie_num,
		  remain)
		VALUES(
		  schedule_seq.nextval,
		  #{sch_date},
		  #{sch_start},
		  #{sch_end},
		  #{hall_num},
		  #{movie_num},
		  #{remain})
	</insert>
	
	<!-- 상영시간표 목록 -->
	<sql id="scheduleSearch">
		<where>
			<if test="keyword != null and keyword != ''">
				<if test="keyfield == 1">
					m.m_title LIKE '%' || #{keyword} || '%'
				</if>
				<if test="keyfield == 2">
					th.th_name LIKE '%' || #{keyword} || '%'
				</if>
				<if test="keyfield == 3">
					h.hall_name LIKE '%' || #{keyword} || '%'
				</if>
				<if test="keyfield == 4">
					s.sch_date LIKE '%' || #{keyword} || '%'
				</if>
			</if>
		</where>
	</sql>
	
	<!-- 전체/검색 레코드수 -->
	<select id="selectRowCount" parameterType="map" resultType="integer">
		SELECT
		  COUNT(*)
		FROM schedule s 
		JOIN hall h ON s.hall_num = h.hall_num
		JOIN movie m ON s.movie_num = m.movie_num
		JOIN theater th ON h.th_num = th.th_num
		<include refid="scheduleSearch"></include>
	</select>
	
	<!-- 전체/검색 목록 -->
	<select id="selectList" parameterType="map" resultType="scheduleVO">
		SELECT
		  *
		FROM (SELECT
				a.*,
				rownum rnum
			  FROM(SELECT
			  		 s.sch_num,
			  		 m.m_title,
			  		 th.th_name,
			  		 h.hall_name,
			  		 s.sch_date,
			  		 s.sch_start,
			  		 s.sch_end
			  	   FROM schedule s 
				   JOIN hall h ON s.hall_num = h.hall_num
				   JOIN movie m ON s.movie_num = m.movie_num
				   JOIN theater th ON h.th_num = th.th_num
			  	   <include refid="scheduleSearch"></include>
			  	   ORDER BY s.sch_date)a)
		<![CDATA[
		WHERE rnum >= #{start} AND rnum <= #{end}
		]]>
	</select>
	
	<!-- 상영시간표 수정 -->
	<update id="updateSchedule">
		UPDATE schedule 
		SET 
		  movie_num=#{movie_num}, 
		  hall_num=#{hall_num}, 
		  sch_date=#{sch_date}, 
		  sch_start=#{sch_start}, 
		  sch_end=#{sch_end}
		  remain=#{remain}
		WHERE 
		  sch_num=#{sch_num}
	</update>
	
	<!-- 상영시간표 목록 불러오기 -->
	<select id="getScheduleList" parameterType="map" resultType="scheduleVO">
		
	SELECT s.*, m.m_title, h.hall_name 
	FROM schedule s 
	JOIN movie m ON s.movie_num = m.movie_num 
	JOIN hall h ON s.hall_num = h.hall_num 
	WHERE th_num=#{th_num} AND m.movie_num=#{movie_num} AND sch_date=#{sch_date}
	ORDER BY m_title, h.hall_num, sch_start
	</select>
	
	<!-- 예매 -->
	<insert id="insertRes" parameterType="reservationVO">
	  INSERT INTO reservation(
	    res_num,
	    res_date,
	    res_people,
	    res_payment,
	    res_total,
	    res_status,
	    sch_num,
	    mem_num,
	    res_seats)
	  VALUES(
	    #{res_num},
	    SYSDATE,
	    #{res_people},
	    #{res_payment},
	    #{res_total},
	    1,
	    #{sch_num},
	    #{mem_num},
	    #{res_seats})
	</insert>
	
	<!-- 예매 내역 불러오기 -->
	<select id="selectRes" parameterType="string">
		SELECT
		  r.*,
		  s.*,
		  m.*,
		  mo.*,
		  th.*,
		  h.*
		FROM reservation r
		JOIN schedule s ON r.sch_num = s.sch_num
		JOIN member_detail m ON r.mem_num = m.mem_num
		JOIN movie mo ON s.movie_num = mo.movie_num
		JOIN hall h ON s.hall_num = h.hall_num
		JOIN theater th ON h.th_num = th.th_num
		WHERE r.res_num=#{res_num}
	</select>
	
	<!-- 관리자 - 전체 회원 예매 내역 -->
	<select id="selectResList" parameterType="map" resultType="reservationVO">
		SELECT
		  *
		FROM (SELECT
	          a.*,
	          rownum rnum
	        FROM(SELECT r.res_num,
	                    d.name,
	                    m.m_title,
	                    s.sch_date,
	                    s.sch_start,
	                    th.th_name,
	                    h.hall_name,
	                    r.res_status
	             FROM reservation r
	             JOIN member_detail d ON r.mem_num = d.mem_num
	             JOIN schedule s ON r.sch_num = s.sch_num
	             JOIN movie m ON s.movie_num = m.movie_num
	             JOIN hall h ON s.hall_num = h.hall_num
	             JOIN theater th ON h.th_num = th.th_num
	             ORDER BY s.sch_date, s.sch_start)a)
	  <![CDATA[
		WHERE rnum >= #{start} AND rnum <= #{end}
	  ]]>    
	</select>
	
</mapper>